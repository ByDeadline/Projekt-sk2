add_library(IRequestData header/IRequestData.h cpp/IRequestData.cpp)
add_library(IRequestResult header/IRequestResult.h cpp/IRequestResult.cpp)
add_library(Log header/Log.h cpp/Log.cpp)
add_library(RequestConverter header/RequestConverter.h cpp/RequestConverter.cpp)
add_library(Server header/Server.h cpp/Server.cpp)
add_library(TCPHandler header/TCPHandler.h cpp/TCPHandler.cpp)
add_library(UserActionResultConverter header/UserActionResultConverter.h cpp/UserActionResultConverter.cpp)
add_library(UserHandler header/UserHandler.h cpp/UserHandler.cpp)
add_library(UserRequestConverter header/UserRequestConverter.h cpp/UserRequestConverter.cpp)


add_library(GlobalSettings INTERFACE)

target_include_directories(GlobalSettings INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/header")
target_include_directories(IRequestData PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
target_include_directories(IRequestResult PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
#target_include_directories(IServerRequestHandler PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
target_include_directories(Log PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
target_include_directories(RequestConverter PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
#target_include_directories(RequestType PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
#target_include_directories(ResultType PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
target_include_directories(Server PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
#target_include_directories(ServerConnection PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
target_include_directories(TCPHandler PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
#target_include_directories(User PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
#target_include_directories(UserActionResult PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
target_include_directories(UserActionResultConverter PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
#target_include_directories(UserData PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
target_include_directories(UserHandler PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")
target_include_directories(UserRequestConverter PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/header")